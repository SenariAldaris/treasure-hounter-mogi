

/*! * пользовательского интерфейса jQuery мышь 1.8.4 * * Авторское право 2010, AUTHORS.txt (http://jqueryui.com/about) * двойной лицензией mit или GPL версии 2 лицензии. * http://jquery.org/license * * http://docs.jquery.com/UI/Mouse * * зависит: * jquery.ui.widget.js */ (функция( $, не определено ) { $.виджет("пользовательского интерфейса.мышь", { параметры: { отмена: ':ввод,вариант', расстояние: 1, задержка: 0 }, _mouseInit: функция() { var в собственн = этот; этот.элемент .с bind('mousedown встречает.'+это.widgetName, функция(событие) { возвращение собственной личности._mouseDown(событие); }) .связать('мыши.'+это.widgetName, функция(событие) { если(собственн._preventClickEvent) { самоуправления._preventClickEvent = ложь; событие.stopImmediatePropagation(); возвращение ложным; } }); этот.начал = ложь; }, // ТОДО: убедитесь, что уничтожив один экземпляр мышь не связывайтесь с // других экземпляров мышь _mouseDestroy: функция() { это.элемент.развяжите('.'+это.widgetName); }, _mouseDown: функция(событие) { // не позволяйте более одного виджета ручка mouseStart // приложения todo: выяснить, почему мы должны использовать originalEvent событие.originalEvent = событие.originalEvent || {}; если (событие.originalEvent.mouseHandled) { возвращение; } // мы, возможно, пропустили mouseup (из окна) (это._mouseStarted && это._mouseUp(событие)); этот._mouseDownEvent = событие; вар селф = это, btnIsLeft = (событии.которые == 1), elIsCancel = (typeof на это.варианты.отмена == "строка" ? $(событие.створ).родители().добавить(событие.створ).фильтр(это.варианты.отменить).длина : ложь); если (!btnIsLeft || elIsCancel || !это._mouseCapture(событие)) { возвращение истинного; } этот.mouseDelayMet = !это.варианты.задержки; если (!это.mouseDelayMet) { это._mouseDelayTimer = функции settimeout(функция() { самоуправления.mouseDelayMet = истина; }, этот.варианты.задержки); } если (это._mouseDistanceMet(события) && это._mouseDelayMet(событие)) { это._mouseStarted = (это._mouseStart(событие) !== ложные); если (!это._mouseStarted) { событие.метод preventdefault(); возвращение истинного; } } // эти делегаты обязаны хранить контекст в этом._mouseMoveDelegate = функция(событие) { возвращение собственной личности._mouseMove(событие); }; этот._mouseUpDelegate = функция(событие) { возвращение собственной личности._mouseUp(событие); }; $(документ) .с bind('mousemove не.'+это.widgetName, это._mouseMoveDelegate) .с bind('mouseup.'+это.widgetName, это._mouseUpDelegate); // метод preventdefault() используется, чтобы предотвратить выделение текста здесь - // впрочем, в Сафари, это приводит выберите короба, чтобы не быть дискретной // больше, так это исправление необходимо ($.браузер.сафари || событие.метод preventdefault()); событие.originalEvent.mouseHandled = истина; возврат истина; }, _mouseMove: функция(событие) { // т. е. mouseup проверять - mouseup произошло, когда мышь вне окна если ($.браузер.встроенный msie && !событие.кнопка) { вернуть этот._mouseUp(событие); } если (это._mouseStarted) { это._mouseDrag(событие); возврат мероприятия.метод preventdefault(); } если (это._mouseDistanceMet(события) && это._mouseDelayMet(событие)) { это._mouseStarted = (это._mouseStart(это._mouseDownEvent, событие) !== ложь); (это._mouseStarted ? это._mouseDrag(событие) : этот._mouseUp(событие)); } возвращение !это._mouseStarted; }, _mouseUp: функция(событие) { $(документ) .развяжите('mousemove не.'+это.widgetName, это._mouseMoveDelegate) .развяжите('mouseup.'+это.widgetName, это._mouseUpDelegate); если (этот._mouseStarted) { это._mouseStarted = ложь; это._preventClickEvent = (событии.цель == в этом._mouseDownEvent.цель); в этом._mouseStop(событие); } возвращение ложным; }, _mouseDistanceMet: функция(событие) { возвращение (Математика.Макс( Математика.АБС(это._mouseDownEvent.pageX - событие.pageX), Математика.АБС(это._mouseDownEvent.pageY - событие.pageY) ) >= этот.варианты.расстояние ); }, _mouseDelayMet: функция(событие) { вернуть этот.mouseDelayMet; }, // Эти методы являются заполнитель, чтобы быть overriden, расширяя плагин _mouseStart: функция(событие) {}, _mouseDrag: функция(событие) {}, _mouseStop: функция(событие) {}, _mouseCapture: функция(событие) { возвращение истинного; } }); })(библиотека jQuery); 
